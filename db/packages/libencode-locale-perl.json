{"name":"libencode-locale-perl","description":"utility to determine the locale encoding\n In many applications it's wise to let Perl use Unicode for the strings it\n processes. Most of the interfaces Perl has to the outside world are still byte\n based. Programs therefore need to decode byte strings that enter the program\n from the outside and encode them again on the way out.\n .\n The POSIX locale system is used to specify both the language conventions\n requested by the user and the preferred character set to consume and output.\n The Encode::Locale module looks up the charset and encoding (called a CODESET\n in the locale jargon) and arranges for the Encode module to know this encoding\n under the name \"locale\". It means bytes obtained from the environment can be\n converted to Unicode strings by calling Encode::encode(locale => $bytes) and\n converted back again with Encode::decode(locale => $string).","dependencies":[{"name":"perl","alternates":[]}],"reverseDependencies":[]}